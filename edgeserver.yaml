spring:
  datasource:
    url: jdbc:postgresql://postgres-edgeserver:5432/edge_server_db
    username: postgres
    password: password
  liquibase:
    change-log: classpath:/db.changelog-master.yaml
  jpa:
    hibernate:
      ddl-auto: validate
  cloud:
    gateway:
      httpclient:
        connect-timeout: 50000
        response-timeout: 20s
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
    kubernetes:
      discovery:
        enabled: true
        all-namespaces: true
  security:
    oauth2:
      resourceServer:
        jwt:
          jwk-set-uri: "http://keycloak:8080/realms/toDoListApp/protocol/openid-connect/certs"

server:
  connection-timeout: 60000
  tomcat:
    connection-timeout: 60000

management:
  endpoints:
    web:
      exposure:
        include: "gateway, *"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    gateway:
     enabled: true
  info:
    env:
      enabled: true
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      timeoutDuration: 20000
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka:8091/eureka/
loging:
  level:
    com:
      recruitment:
        edgeserver: DEBUG
